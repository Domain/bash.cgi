#!/bin/bash
# run via tewiba
[ -n "$TEWIBA" ] || exec tewiba -v "$0"

# Testing the form POST submit
# the script form-files/cgibashopts-form.cgi has been installed on a
# server, and submitted via various browsers
# for a browser B. form-files/$B.data is the input stream fed to the script by
# the web server, and form-files/$B.vars is the dump of the environment vars
# the uploaded files sources are in files-unix for the browsers under unix
# and files-dos for the browsers under windows, as captured by 
# cgibashopts-form-files.cgi in /tmp/CBOgen-$B.data and /tmp/CBOgen-$B.vars
# Do not touch the form fields before submitting

# We "replay" all the saved CGI invocation data in form, so we do not 
# need a web server, different browsers, and manual steps for the tests

for path in form/*.data; do
    B="${path%.data}"; B="${B##*/}"

    TEST Form POST submit from browser $B
    for v in REQUEST_METHOD CONTENT_TYPE QUERY_STRING; do
	eval $(grep ^$v= form/"$B.vars") # setup the env
    done
    . ../bash.cgi <form/"$B.data" # simulate a cgi call
	
    # Test the form vars other than file vars
    [ "${FORMS[text]}" != "A sample string!" ] && TERR "text is \"${FORMS[text]}\""
    [ "${FORMS[ta]}" != "ta1${nl}ta2${nl}ta3" ] && TERR "ta is \"${FORMS[ta]}\""
    [ "${FORMS[sel]}" != "sel3" ] && TERR "sel is \"${FORMS[sel]}\""
    [ "${FORMS[check]}" != "on" ] && TERR "check is \"${FORMS[check]}\""

    . clearenv.sh
done

TEND
